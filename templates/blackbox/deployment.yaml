{{- if (eq .Values.blackbox.kind "Deployment") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kube-prometheus-stack.fullname" . }}
  namespace: {{ template "kube-prometheus-stack.namespace" . }}
  labels:
    {{- include "kube-prometheus-stack.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.blackbox.replicas }}
  selector:
    matchLabels:
      {{- include "kube-prometheus-stack.selectorLabels" . | nindent 6 }}
  strategy:
{{ toYaml .Values.blackbox.strategy | indent 4 }}
  template:
    metadata:
      labels:
        {{- include "kube-prometheus-stack.labels" . | nindent 8 }}
        {{- if .Values.blackbox.pod.labels }}
{{ toYaml .Values.blackbox.pod.labels | indent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.blackbox.podAnnotations }}
{{ toYaml .Values.blackbox.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      automountServiceAccountToken: {{ .Values.blackbox.automountServiceAccountToken }}
      serviceAccountName: {{ template "kube-prometheus-stack.serviceAccountName" . }}
    {{- if .Values.blackbox.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.blackbox.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.blackbox.affinity }}
      affinity:
{{ toYaml .Values.blackbox.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.blackbox.tolerations }}
      tolerations:
{{ toYaml .Values.blackbox.tolerations | indent 6 }}
    {{- end }}
    {{- if .Values.blackbox.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.blackbox.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
    {{- end }}
      {{- if .Values.blackbox.hostAliases }}
      hostAliases:
        {{- range .Values.blackbox.hostAliases }}
        - ip: {{ .ip }}
          hostnames:
          {{- range .hostNames }}
          - {{ . }}
          {{- end }}
        {{- end }}
      {{- end }}
      restartPolicy: {{ .Values.blackbox.restartPolicy }}

      {{- if .Values.blackbox.priorityClassName }}
      priorityClassName: "{{ .Values.blackbox.priorityClassName }}"
      {{- end }}
      securityContext:
{{ toYaml .Values.blackbox.podSecurityContext | indent 8 }}  
      {{- if .Values.blackbox.extraInitContainers }}
      initContainers:
{{ toYaml .Values.blackbox.extraInitContainers | indent 8 }}
      {{- end }}
      containers:
        {{- if .Values.blackbox.extraContainers }}
{{ toYaml .Values.blackbox.extraContainers | indent 8 }}
        {{- end }}      
        - name: blackbox-exporter
          image: "{{ .Values.blackbox.image.repository }}:{{ .Values.blackbox.image.tag }}"
          imagePullPolicy: {{ .Values.blackbox.image.pullPolicy }}
          securityContext:
{{ toYaml .Values.blackbox.securityContext | indent 12 }}
          env:
          {{- range $key, $value := .Values.blackbox.extraEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          args:
{{- if .Values.blackbox.config }}
   {{- if .Values.blackbox.configPath }}
            - "--config.file={{ .Values.blackbox.configPath }}"
   {{- else }}
            - "--config.file=/config/blackbox.yaml"
   {{- end }}
{{- else }}
            - "--config.file=/etc/blackbox_exporter/config.yml"
{{- end }}
        {{- if .Values.blackbox.extraArgs }}
{{ toYaml .Values.blackbox.extraArgs | indent 12 }}
        {{- end }}
          resources:
{{ toYaml .Values.blackbox.resources | indent 12 }}
          ports:
            - containerPort: {{ .Values.blackbox.containerPort }}
              name: http
          livenessProbe:
            {{- toYaml .Values.blackbox.livenessProbe | trim | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.blackbox.readinessProbe | trim | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: config
          {{- range .Values.blackbox.extraConfigmapMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath | default "" }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- range .Values.blackbox.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- if .Values.blackbox.extraVolumeMounts }}
{{ toYaml .Values.blackbox.extraVolumeMounts | indent 12 }}
          {{- end }}
{{- if .Values.blackbox.dnsPolicy }}
      dnsPolicy: {{ .Values.blackbox.dnsPolicy | toString }}
{{- end }}
      hostNetwork: {{ .Values.blackbox.hostNetwork }}
{{- if .Values.blackbox.dnsConfig }}
      dnsConfig:
        {{- toYaml .Values.blackbox.dnsConfig | nindent 8 }}
{{- end }}
      volumes:
    {{- if .Values.blackbox.extraVolumes }}      
{{ toYaml .Values.blackbox.extraVolumes | indent 8 }}      
    {{- end }}      
        - name: config
{{- if .Values.blackbox.secretConfig }}
          secret:
            secretName: {{ template "kube-prometheus-stack.fullname" . }}
{{- else if .Values.blackbox.configExistingSecretName }}
          secret:
            secretName: {{ .Values.blackbox.configExistingSecretName }}
{{- else }}
          configMap:
            name: {{ template "kube-prometheus-stack.fullname" . }}
{{- end }}
      {{- range .Values.blackbox.extraConfigmapMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
            defaultMode: {{ .defaultMode }}
      {{- end }}
      {{- range .Values.blackbox.extraSecretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
            defaultMode: {{ .defaultMode }}
      {{- end }}
{{- end }}
